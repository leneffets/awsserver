name: Release Pipeline

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.25

      - name: Install dependencies
        run: go mod tidy

      - name: Build Binary
        run: CGO_ENABLED=0 go build -ldflags '-extldflags "-static"' -o awsserver ./cmd/server

      - name: Get build architecture
        id: arch
        run: echo "ARCH=$(uname -m)" >> $GITHUB_ENV

      - name: Package Binary
        run: |
          ARCH=${{ env.ARCH }}
          TAR_NAME="awsserver-linux-${ARCH}.tar.gz"
          tar -czvf ${TAR_NAME} awsserver
          echo "RELEASE_FILE=${TAR_NAME}" >> $GITHUB_ENV

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: awsserver-linux-${{ env.ARCH }}
          path: ${{ env.RELEASE_FILE }}

      - name: Upload artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.RELEASE_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image with version tag
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/awsserver:${{ github.ref_name }}
